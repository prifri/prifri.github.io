[{"id":0,"href":"/git/","title":"Git","parent":"Test1234가나다라","content":""},{"id":1,"href":"/Git/SSH-Key-Setup/","title":"SSH Key Setup","parent":"Git","content":"ubuntu 환경을 기준으로 한다.\n 자신의 ssh key 생성. ssh-keygen 처음 물어보는게 key의 경로이자 name이 된다. 그냥 넘기면 기본 경로로 ~/.ssh/id_rsa, ~/.ssh/id_rsa.pub에 존재한다.\n~/.ssh/id_rsa : private key ~/.ssh/id_rsa.pub : public key\npublic key를 github자신의 계정에 등록해줘야한다.\ncat ~/.ssh/id_rsa.pub 하면 쏼라쏼라 나올텐데 전부 copy해놓는다.\n자신의 github 에 ssh키 등록 github 계정에서 setting -\u0026gt; SSH and GPG keys에 들어가서 New SSH key 눌러서 등록한다.\nclone 한 repository remote 경로 변경 일반적으로 그냥 copy해서 가져오면 remote경로가 https://\u0026hellip; 로 시작한다. 이러면 결국 웹 프로토콜로 통신을 하므로 이렇게 해서는 안되고 scp로 접근하는것처럼 바꿔줘야한다.\n일단 다음의 명령어로 어디에 remote 되있는지 보고\ngit remote -v git remote set-url origin git@github.com:prifri/prifri.github.io.git 뭐 이런식으로 바꿔줘야한다.\n다중 SSH key 셋팅. 사이트\n"},{"id":2,"href":"/","title":"Test1234가나다라","parent":"","content":""},{"id":3,"href":"/Make_Site/Hugo%EB%A1%9C-site-%EB%A7%8C%EB%93%A4%EA%B8%B0/","title":"Hugo로 site 만들기","parent":"Make_Site","content":"ubuntu 환경을 기준으로 한다.\n Hugo 설치 [Hugo 에 대한 설명과 설치] (https://ialy1595.github.io/post/blog-construct-1/) [Hugo 공식 Quick Start] (https://gohugo.io/getting-started/quick-start/)\nubuntu에서 환경을 시작하므로 apt로 hugo를 설치한다.\nsudo apt-get install hugo 사이트 site 이름은 prifri_site 라고 대충 정했을때\n다음과 같은 명령어로 site 환경을 초기화한다.\nhugo new site prifri_site cd prifri_site directiory가 생기고 해당 directory가 workspace 개념이된다.\n테마 다운로드 [Hugo Themes] (https://themes.gohugo.io/) [Geekdocs] (https://geekdocs.de/usage/getting-started/)\ngeekdoc를 사용했다. darkmode가 바로 지원되는게 마음에 들어 그냥 이거썻다.\ncode study용 블로그는 주로 doc계열을 많이 사용하는거 같으며 대표적으로 learn, books등이 존재하는거 같다.\n생성방법은 Geekdocs의 공식 started를 따른다.\nmkdir -p themes/hugo-geekdoc/ curl -L https://github.com/thegeeklab/hugo-geekdoc/releases/latest/download/hugo-geekdoc.tar.gz | tar -xz -C themes/hugo-geekdoc/ --strip-components=1 config.toml을 공식 홈페이지에서 요구하는것처럼 똑같이 수정해준다.\nnpm으로 뭘 이것저것도 잇는데 Geekdocs 테마의 original source를 build하는게 아니면 필요없다.  repository 관리. workspace repository 연동 repository 가 2개 필요하다. 한개는 site의 모든 source가 있을 workspace가 존재하는 repository와 build 결과물만이 존재해 실제 site와 연동되는 repository가 필요하다.\n실제 site와 연동되는 repository는 git 계정이름을 사용해서 다음과 무조건 ${NAME}.github.io로 이름을 지어야되며, 무료사용자일 경우 무조건 public으로 써야된다.\nbuild 결과물 repository는 workspace repository의 submodule로 사용할 것다.\n아마 다른 directory에 관리하는 방법으로도 되긴 하겠지만 빌드 결과물이 생기는 public directory그 자체는 바로 git repository로 쓰는게 편한방법이라 다들 이렇게 그냥 쓰는거 같다.\n일단 github에서 workspace(hugo site 생성명령어로 만들어진 directory)용 repository와 build repository를 만든다.\n그리고 site directory를 workspace repository로 remote 시켜준다. prifri_site로 예로 들면 다음과 같다.\ngit init git remote add origin git@github.com:prifri/prifri_site.git https://github.. 은 현재 시점에서 이제 사용하지 않는다 auth token을 써야 되는데 매번 번거로우므로 github 계정에 ssh key를 등록시켜놓는 방법으로 사용한다.\nrepository 관리. build repository 연동 현재 빌드를 한번도 안했기 때문에 build에 대한 결과물이 없으므로 빌드를 한번 해준다.\nhugo -t hugo-geekdoc 그러면 public directory가 생기는데 이것을 이제 build repository와 연결을 해줘야된다.\nworkspace repository source안에 build repository가 있는 개념이므로 submodule로 연동해준다.\ngit submodule add -b origin git@github.com:prifri/prifri.github.io public 그후 workspace, build repository둘다 git add 후 push로 밀어보면 적당히 보이고 config.toml을 적당히 수정해서 적당히 content 만들고 해보면된다.\n"},{"id":4,"href":"/make_site/","title":"Make_Site","parent":"Test1234가나다라","content":""},{"id":5,"href":"/categories/","title":"Categories","parent":"Test1234가나다라","content":""},{"id":6,"href":"/tags/","title":"Tags","parent":"Test1234가나다라","content":""}]